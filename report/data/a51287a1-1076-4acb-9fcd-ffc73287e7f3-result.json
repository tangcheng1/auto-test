{"name": "test_adminlogin[caseinfo1]", "status": "failed", "statusDetails": {"message": "AssertionError", "trace": "caseinfo = {'name': 'admin登录-密码错误', 'request': {'headers': {'Content-Type': 'application/json', 'User-Agent': 'Mozilla/5.0 (Windo...deviceId': '1254'}, 'method': 'post', 'params': {'password': 0, 'userName': 'admin'}, 'path': '/api/admin/login', ...}}\n\n    @allure.story('admin登录接口')\n    @pytest.mark.parametrize(\"caseinfo\", YamlUtil().yaml_read(\"data_yaml\", \"admin_login.yaml\"))\n    def test_adminlogin(caseinfo):\n        # 获取ymal\n        value = caseinfo['request']\n        # 更新需要参数化的万能验证码，完成接口关联\n        # 读取extract.yaml文件，替换掉login.yaml中需要参数化的变量，这里是将万能验证码的值传入到验证码smsCode中\n        extract = YamlUtil().yaml_read(\"data_yaml\", \"extract.yaml\")\n        yaml_data = YamlUtil.extractdata_render_params(extract, value)\n        validate = value[\"validate\"] if \"validate\" in value else None\n        response = Utils.sendRequest(caseinfo['name'], yaml_data['method'], yaml_data['path'], yaml_data['params'],\n                                     yaml_data['headers'])\n        if \"token\" in str(response):\n            YamlUtil().yaml_write({\"token\": response[\"data\"][\"token\"]}, \"data_yaml\", \"extract.yaml\")\n        else:\n            logger.info(f\"token获取失败或者此为登录失败用例\")\n        if validate:\n>           Utils.validate(response, validate)\n\ntest_case/test_admin/admin_wallet_add_test.py:35: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'code': '10003', 'message': '验证码错误', 'success': False}\nvalidate = [{'equal_to': {'$.code': 1}}]\n\n    @staticmethod\n    def validate(response, validate: list):\n        for val in validate:\n            for key, item in val.items():\n                for key_json_path, item_expect in item.items():\n                    item_expect = str(item_expect)\n                    logger.info(f\"预期结果的值是{item_expect}\")\n                    actual_val = jsonpath.jsonpath(response, key_json_path)[0]\n                    logger.info(f\"获取真实值是{actual_val}\")\n                    if key == \"equal_to\":\n>                       assert actual_val == item_expect\nE                       AssertionError\n\ntools/base_requests.py:50: AssertionError"}, "attachments": [{"name": "log", "source": "76f75b35-beae-4365-b438-730885fd5d3e-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "caseinfo", "value": "{'name': 'admin登录-密码错误', 'request': {'method': 'post', 'path': '/api/admin/login', 'headers': {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (HTML, like Gecko) \"\"Chrome/54.0.2840.99 Safari/537.36', 'deviceId': '1254', 'Content-Type': 'application/json'}, 'params': {'userName': 'admin', 'password': 0}, 'validate': [{'equal_to': {'$.code': 1}}]}}"}], "start": 1652254137366, "stop": 1652254137503, "uuid": "564cce84-1e15-4058-b731-7b77e44ccc88", "historyId": "d612d8f1577c95fd5b66026f726d65df", "testCaseId": "f22f87a6340095a4fa947fb8a1e35986", "fullName": "test_case.test_admin.admin_wallet_add_test#test_adminlogin", "labels": [{"name": "story", "value": "admin登录接口"}, {"name": "parentSuite", "value": "test_case.test_admin"}, {"name": "suite", "value": "admin_wallet_add_test"}, {"name": "host", "value": "xudeMac-mini.local"}, {"name": "thread", "value": "48241-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_admin.admin_wallet_add_test"}]}
{
  "uid" : "ccc88dbfd6df7c19",
  "name" : "test_login[caseinfo1]",
  "fullName" : "test_case.login_test.Testlogin#test_login",
  "historyId" : "f2d946f59d61f64f935b7e857cc51fc7",
  "time" : {
    "start" : 1651890092426,
    "stop" : 1651890092562,
    "duration" : 136
  },
  "status" : "broken",
  "statusMessage" : "KeyError: 'data'",
  "statusTrace" : "self = <test_case.login_test.Testlogin object at 0x1059b2ac0>\ncaseinfo = {'name': '骑手登录', 'request': {'headers': {'Content-Type': 'application/json', 'User-Agent': 'Mozilla/5.0 (Windows NT 10...'method': 'post', 'params': {'smsCode': '602010', 'userName': '15400010001'}, 'path': '/api/rider/smscode/login', ...}}\n\n    @allure.story('骑手登录接口')\n    @pytest.mark.parametrize(\"caseinfo\", YamlUtil().yaml_read(\"data\", \"login.yaml\"))\n    def test_login(self, caseinfo):\n        # 获取ymal\n        value = caseinfo['request']\n        # 更新需要参数化的万能验证码，完成接口关联\n        value['params']['smsCode'] = YamlUtil().yaml_read(\"data\", \"extract.yaml\")[\"almighty_code\"]\n        body = value['params']\n        # files = YamlUtil().yaml_read[\"files\"] if \"files\" in test_case else None\n        # extract = value[\"extract\"] if \"extract\" in value else None\n        validate = value[\"validate\"] if \"validate\" in value else None\n        response = Utils.sendRequest(value['method'], value['path'], body, value['headers'])\n>       token = YamlUtil().yaml_write({\"token\": response[\"data\"][\"token\"]}, \"data\", \"extract.yaml\")\nE       KeyError: 'data'\n\ntest_case/login_test.py:29: KeyError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "clear_yaml",
    "time" : {
      "start" : 1651890092111,
      "stop" : 1651890092112,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "KeyError: 'data'",
    "statusTrace" : "self = <test_case.login_test.Testlogin object at 0x1059b2ac0>\ncaseinfo = {'name': '骑手登录', 'request': {'headers': {'Content-Type': 'application/json', 'User-Agent': 'Mozilla/5.0 (Windows NT 10...'method': 'post', 'params': {'smsCode': '602010', 'userName': '15400010001'}, 'path': '/api/rider/smscode/login', ...}}\n\n    @allure.story('骑手登录接口')\n    @pytest.mark.parametrize(\"caseinfo\", YamlUtil().yaml_read(\"data\", \"login.yaml\"))\n    def test_login(self, caseinfo):\n        # 获取ymal\n        value = caseinfo['request']\n        # 更新需要参数化的万能验证码，完成接口关联\n        value['params']['smsCode'] = YamlUtil().yaml_read(\"data\", \"extract.yaml\")[\"almighty_code\"]\n        body = value['params']\n        # files = YamlUtil().yaml_read[\"files\"] if \"files\" in test_case else None\n        # extract = value[\"extract\"] if \"extract\" in value else None\n        validate = value[\"validate\"] if \"validate\" in value else None\n        response = Utils.sendRequest(value['method'], value['path'], body, value['headers'])\n>       token = YamlUtil().yaml_write({\"token\": response[\"data\"][\"token\"]}, \"data\", \"extract.yaml\")\nE       KeyError: 'data'\n\ntest_case/login_test.py:29: KeyError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e6ce640b01f1f448",
      "name" : "log",
      "source" : "e6ce640b01f1f448.txt",
      "type" : "text/plain",
      "size" : 651
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "骑手登录接口"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "login_test"
  }, {
    "name" : "subSuite",
    "value" : "Testlogin"
  }, {
    "name" : "host",
    "value" : "xudeMac-mini.local"
  }, {
    "name" : "thread",
    "value" : "20901-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.login_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "caseinfo",
    "value" : "{'name': '骑手登录', 'request': {'method': 'post', 'path': '/api/rider/smscode/login', 'headers': {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (HTML, like Gecko) \"\"Chrome/54.0.2840.99 Safari/537.36', 'deviceId': '1254', 'Content-Type': 'application/json'}, 'params': {'smsCode': 'qwe', 'userName': '15400010001'}, 'validate': [{'equal_to': {'$.code': 10003}}]}}"
  } ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Test defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "tags" : [ ]
  },
  "source" : "ccc88dbfd6df7c19.json",
  "parameterValues" : [ "{'name': '骑手登录', 'request': {'method': 'post', 'path': '/api/rider/smscode/login', 'headers': {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (HTML, like Gecko) \"\"Chrome/54.0.2840.99 Safari/537.36', 'deviceId': '1254', 'Content-Type': 'application/json'}, 'params': {'smsCode': 'qwe', 'userName': '15400010001'}, 'validate': [{'equal_to': {'$.code': 10003}}]}}" ]
}
{
  "uid" : "850fda8016a19be6",
  "name" : "test_almightycode[caseinfo0]",
  "fullName" : "test_case.login_test.Testwork#test_almightycode",
  "historyId" : "6e7af39bb606afac8bf5087e4fe0bc35",
  "time" : {
    "start" : 1651818459272,
    "stop" : 1651818460641,
    "duration" : 1369
  },
  "status" : "broken",
  "statusMessage" : "NameError: name 'work' is not defined",
  "statusTrace" : "self = <test_case.login_test.Testwork object at 0x1090cf430>\ncaseinfo = {'name': '万能验证码', 'request': {'headers': {'Content-Type': 'application/json', 'User-Agent': 'Mozilla/5.0 (Windows NT 1...840.99 Safari/537.36', 'deviceId': '1254'}, 'method': 'get', 'params': 'none', 'path': '/api/admin/get/almighty/code'}}\n\n    @allure.story('验证码接口')\n    @pytest.mark.parametrize(\"caseinfo\", YamlUtil().yaml_read(\"data\", \"almightycode.yaml\"))\n    def test_almightycode(self, caseinfo):\n        # 获取ymal\n        value = assignment_yamlparams(caseinfo['request'])\n        url = URL + value['path']\n        response = sendRequest(value['method'], url, value['params'], value['headers'])\n>       almighty_code = YamlUtil().yaml_write({\"almighty_code\": response[\"data\"]}, \"data\", \"extract.yaml\")\n\ntest_case/login_test.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tools.yaml_util.YamlUtil object at 0x1090cfdc0>\ndata = {'almighty_code': '776420'}, fileDir = 'data', fileName = 'extract.yaml'\n\n    def yaml_write(self,data, fileDir, fileName):\n        writework = f\"{str(Path(__file__).parent.parent)}\" + \"/\" + fileDir + \"/\" + fileName\n>       logger.info(\"加载 {} 文件......\".format(work))\nE       NameError: name 'work' is not defined\n\ntools/yaml_util.py:34: NameError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "clear_yaml",
    "time" : {
      "start" : 1651818459271,
      "stop" : 1651818459271,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "NameError: name 'work' is not defined",
    "statusTrace" : "self = <test_case.login_test.Testwork object at 0x1090cf430>\ncaseinfo = {'name': '万能验证码', 'request': {'headers': {'Content-Type': 'application/json', 'User-Agent': 'Mozilla/5.0 (Windows NT 1...840.99 Safari/537.36', 'deviceId': '1254'}, 'method': 'get', 'params': 'none', 'path': '/api/admin/get/almighty/code'}}\n\n    @allure.story('验证码接口')\n    @pytest.mark.parametrize(\"caseinfo\", YamlUtil().yaml_read(\"data\", \"almightycode.yaml\"))\n    def test_almightycode(self, caseinfo):\n        # 获取ymal\n        value = assignment_yamlparams(caseinfo['request'])\n        url = URL + value['path']\n        response = sendRequest(value['method'], url, value['params'], value['headers'])\n>       almighty_code = YamlUtil().yaml_write({\"almighty_code\": response[\"data\"]}, \"data\", \"extract.yaml\")\n\ntest_case/login_test.py:27: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tools.yaml_util.YamlUtil object at 0x1090cfdc0>\ndata = {'almighty_code': '776420'}, fileDir = 'data', fileName = 'extract.yaml'\n\n    def yaml_write(self,data, fileDir, fileName):\n        writework = f\"{str(Path(__file__).parent.parent)}\" + \"/\" + fileDir + \"/\" + fileName\n>       logger.info(\"加载 {} 文件......\".format(work))\nE       NameError: name 'work' is not defined\n\ntools/yaml_util.py:34: NameError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "45ded87560ad9aa8",
      "name" : "log",
      "source" : "45ded87560ad9aa8.txt",
      "type" : "text/plain",
      "size" : 615
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "验证码接口"
  }, {
    "name" : "parentSuite",
    "value" : "test_case"
  }, {
    "name" : "suite",
    "value" : "login_test"
  }, {
    "name" : "subSuite",
    "value" : "Testwork"
  }, {
    "name" : "host",
    "value" : "xudeMac-mini.local"
  }, {
    "name" : "thread",
    "value" : "16450-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_case.login_test"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "caseinfo",
    "value" : "{'name': '万能验证码', 'request': {'method': 'get', 'path': '/api/admin/get/almighty/code', 'headers': {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (HTML, like Gecko) \"\"Chrome/54.0.2840.99 Safari/537.36', 'deviceId': '1254', 'Content-Type': 'application/json'}, 'params': 'none'}}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "850fda8016a19be6.json",
  "parameterValues" : [ "{'name': '万能验证码', 'request': {'method': 'get', 'path': '/api/admin/get/almighty/code', 'headers': {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (HTML, like Gecko) \"\"Chrome/54.0.2840.99 Safari/537.36', 'deviceId': '1254', 'Content-Type': 'application/json'}, 'params': 'none'}}" ]
}